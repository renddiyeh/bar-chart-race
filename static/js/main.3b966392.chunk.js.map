{"version":3,"sources":["AxisTop.js","RacingAxisTop.js","Bar.js","RacingBarGroup.js","RacingBarChart.js","useKeyframes.js","data.tsv","App.js","useWindowSize.js","serviceWorker.js","index.js"],"names":["AxisTop","props","domainMax","xMax","yMax","numTicks","Math","floor","xScaleForAxis","scaleLinear","domain","range","GridColumns","scale","left","top","width","height","stroke","hideAxisLine","tickLabelProps","textAnchor","dy","fontSize","fontFamily","AnimatedAxisTop","animated","RacingAxisTop","forwardRef","ref","duration","prevDomainMax","useRef","current","springProps","useSpring","from","to","s","format","Bar","color","x","y","name","value","author","id","lines","useMemo","l","length","sep","substring","lableX","min","Fragment","RectClipPath","fill","strokeWidth","verticalAnchor","fontWeight","clipPath","AnimatedBar","RacingBarGroup","frameData","xScale","yScale","colorScale","transition","useTransition","map","idx","category","key","item","initial","d","leave","enter","update","bandwidth","values","interpolate","v","toFixed","categories","scaleOrdinal","RacingBarChart","React","numOfBars","margin","keyframes","onStart","onStop","useState","frameIdx","animationKey","playing","setAnimation","updateFrameRef","useEffect","setTimeout","prevFrameIdx","others","isLastFrame","nextFrameIdx","barGroupRef","axisRef","useImperativeHandle","replay","clearTimeout","start","animation","stop","prevPlayingRef","useLayoutEffect","frame","currentDate","date","data","total","reduce","sum","right","bottom","lengendScale","scaleBand","_","Array","paddingInner","quarter","getMonth","totalFormated","Group","stroke-linecap","stroke-linejoin","stroke-width","rx","transform","font-size","font-family","letter-spacing","x1","y1","x2","y2","labels","label","i","xPos","text","slice","getFullYear","strokeDasharray","strokeLinecap","points","dx","defaultProps","makeKeyframes","numOfSlice","findData","dataByDateAndName","Map","forEach","dataPoint","get","nextGroup","set","e","buildFindData","nameSet","Set","nameList","dateSet","frames","sort","result","prev","next","prevTimestamp","Date","getTime","diff","sliceDate","sliceData","prevValue","nextDataPoint","sliceValue","push","a","b","useKeyframes","dataUrl","setKeyframes","tsv","then","transformed","all","q","qPath","hasQData","filter","String","padStart","join","Number","prototype","apply","chartMargin","ratio","App","setDuration","windowWidth","getSize","window","innerWidth","innerHeight","windowSize","setWindowSize","onResize","addEventListener","removeEventListener","useWindowSize","chartWidth","tsvData","chartRef","forceUpdate","style","maxWidth","paddingTop","onClick","type","step","max","onChange","target","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b966392.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleLinear } from \"@vx/scale\";\r\nimport { AxisTop as VxAxisTop } from \"@vx/axis\";\r\nimport { GridColumns } from '@vx/grid';\r\n\r\nconst AxisTop = (props) => {\r\n  const { domainMax, xMax, yMax } = props;\r\n  const numTicks = xMax > 500 ? 5 : Math.floor(xMax / 100);\r\n  const xScaleForAxis = scaleLinear({\r\n    domain: [0, domainMax],\r\n    range: [0, xMax]\r\n  });\r\n  return (\r\n    <>\r\n      <GridColumns scale={xScaleForAxis} left={0} top={-8} width={xMax} height={yMax} stroke=\"#e0e0e0\" />\r\n      <VxAxisTop\r\n        top={-10}\r\n        left={0}\r\n        scale={xScaleForAxis}\r\n        hideAxisLine\r\n        tickLabelProps={() => ({ textAnchor: 'middle', dy: '-0.5em', fontSize: 12, fontFamily: 'Noto Sans TC' })}\r\n        numTicks={numTicks}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nAxisTop.propTypes = {\r\n  domainMax: PropTypes.number.isRequired,\r\n  xMax: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default AxisTop;","import React, { forwardRef, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport AxisTop from \"./AxisTop\";\r\n\r\nconst AnimatedAxisTop = animated(AxisTop);\r\n\r\nconst RacingAxisTop = forwardRef(({ domainMax, xMax, duration }, ref) => {\r\n  const prevDomainMaxRef = useRef(domainMax);\r\n  const prevDomainMax = prevDomainMaxRef.current;\r\n  const springProps = useSpring({\r\n    from: { domainMax: prevDomainMax },\r\n    to: { domainMax },\r\n    duration,\r\n    ref\r\n  });\r\n  return (\r\n    <AnimatedAxisTop\r\n      xMax={xMax}\r\n      {...springProps}\r\n    />\r\n  );\r\n});\r\n\r\nRacingAxisTop.propTypes = {\r\n  domainMax: PropTypes.number.isRequired,\r\n  xMax: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default RacingAxisTop;","import React, { useMemo } from \"react\";\r\nimport { Bar as VxBar } from \"@vx/shape\";\r\nimport { Text as VxText } from \"@vx/text\";\r\nimport { RectClipPath } from '@vx/clip-path'\r\n\r\nimport { format } from 'd3-format'\r\n\r\nconst s = format(\".2s\")\r\n\r\nconst Bar = ({ color, x, y, width, height, name, value, author, id, xMax }) => {\r\n  const lines = useMemo(() => {\r\n    const l = author.length\r\n    const sep = Math.floor(l / 2)\r\n    return l > 8 ? `${author.substring(0, sep)}\\n${author.substring(sep)}` : author\r\n  }, [author])\r\n  const lableX = Math.min(width, xMax)\r\n  return (\r\n    <React.Fragment>\r\n      <RectClipPath\r\n        id={`clip-${id}`}\r\n        x={x}\r\n        y={y}\r\n        width={width}\r\n        height={height}\r\n      />\r\n      <VxBar\r\n        x={x}\r\n        y={y}\r\n        width={width}\r\n        height={height}\r\n        fill={color}\r\n        stroke=\"black\"\r\n        strokeWidth=\"1\"\r\n      />\r\n      <VxText\r\n        x={x - 10}\r\n        y={y + height / 2}\r\n        textAnchor=\"end\"\r\n        verticalAnchor=\"middle\"\r\n        fontFamily=\"Noto Sans TC\"\r\n        width={50}\r\n        fontSize=\"14px\"\r\n      >\r\n        {lines}\r\n      </VxText>\r\n      <VxText x={x + lableX - 10} y={y + 4 + height / 2} textAnchor=\"end\" fontWeight=\"500\" fontFamily=\"Noto Sans TC\" fontSize=\"14px\" clipPath={`url(#clip-${id})`}>\r\n        {name}\r\n      </VxText>\r\n      <VxText x={x + lableX + 10} y={y + 5 + height / 2} fontFamily=\"Noto Sans TC\" fontSize=\"20px\" fontWeight=\"700\" fill=\"#333333\">\r\n        {s(value)}\r\n      </VxText>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import React, { forwardRef, useMemo } from \"react\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport Bar from \"./Bar\";\r\n\r\nconst AnimatedBar = animated(Bar);\r\n\r\nconst RacingBarGroup = forwardRef(({ frameData, xScale, yScale, colorScale, duration, xMax }, ref) => {\r\n  const transition = useTransition(\r\n    frameData.map(({ name, value, category, author, id }, idx) => ({\r\n      y: yScale(idx),\r\n      width: xScale(value),\r\n      value,\r\n      name,\r\n      category,\r\n      author,\r\n      key: id,\r\n    })),\r\n    {\r\n      key: item => item.key,\r\n      initial: d => d,\r\n      from: { y: yScale.range()[1] + 50, width: 0, value: 0 },\r\n      leave: { y: yScale.range()[1] + 50, width: 0, value: 0 },\r\n      enter: d => d,\r\n      update: d => d,\r\n      ref,\r\n      duration,\r\n    }\r\n  );\r\n  const { x, height } = useMemo(() => {\r\n    return {\r\n      x: xScale(0),\r\n      height: yScale.bandwidth(),\r\n    }\r\n  }, [])\r\n  return transition((values, item) => {\r\n    const { y, value, width } = values;\r\n    const { category, name, author, key } = item;\r\n    return (\r\n      <AnimatedBar\r\n        x={x}\r\n        y={y}\r\n        width={width}\r\n        height={height}\r\n        color={colorScale(category)}\r\n        value={value.interpolate(v => v.toFixed())}\r\n        name={name}\r\n        author={author}\r\n        key={key}\r\n        id={key}\r\n        xMax={xMax}\r\n      />\r\n    );\r\n  })\r\n});\r\n\r\nexport default RacingBarGroup;\r\n","import React, { useEffect, useImperativeHandle, useMemo, useRef, useState, useLayoutEffect } from \"react\";\r\nimport { scaleLinear, scaleBand, scaleOrdinal } from \"@vx/scale\";\r\nimport { Group } from \"@vx/group\";\r\nimport { LegendOrdinal } from '@vx/legend';\r\nimport { format } from 'd3-format'\r\n\r\nimport RacingAxisTop from \"./RacingAxisTop\";\r\nimport RacingBarGroup from \"./RacingBarGroup\";\r\n\r\nconst categories = ['文學小說', '商業理財', '生活旅遊', '心理勵志', '其他']\r\n\r\nconst colorScale = scaleOrdinal({\r\n  domain: categories,\r\n  range: ['#F27E7E', '#80D2FF', '#61C67E', '#FFC027', '#CCCCCC'],\r\n});\r\n\r\nconst legendGlyphSize = 20\r\n\r\nconst s = format('.2s')\r\n\r\nconst RacingBarChart = React.forwardRef(({\r\n  numOfBars,\r\n  width,\r\n  height,\r\n  margin,\r\n  keyframes,\r\n  onStart,\r\n  onStop,\r\n  duration,\r\n}, ref) => {\r\n  const [{ frameIdx, animationKey, playing }, setAnimation] = useState({\r\n    frameIdx: 0,\r\n    animationKey: 0,\r\n    playing: false,\r\n  });\r\n  const updateFrameRef = useRef();\r\n  // when replay, increment the key to rerender the chart.\r\n  useEffect(() => {\r\n    if (!updateFrameRef.current && playing) {\r\n      updateFrameRef.current = setTimeout(() => {\r\n        updateFrameRef.current = null;\r\n        setAnimation(({ frameIdx: prevFrameIdx, playing, ...others }) => {\r\n          const isLastFrame = prevFrameIdx === keyframes.length - 1;\r\n          const nextFrameIdx = isLastFrame ? prevFrameIdx : prevFrameIdx + 1;\r\n          return {\r\n            ...others,\r\n            frameIdx: playing ? nextFrameIdx : prevFrameIdx,\r\n            playing: !!(playing && !isLastFrame),\r\n          }\r\n        });\r\n      }, duration);\r\n    }\r\n  });\r\n  const barGroupRef = useRef();\r\n  const axisRef = useRef();\r\n  useImperativeHandle(ref, () => ({\r\n    replay: () => {\r\n      clearTimeout(updateFrameRef.current);\r\n      updateFrameRef.current = null;\r\n      setAnimation(({ animationKey, ...others }) => ({\r\n        ...others,\r\n        frameIdx: 0,\r\n        animationKey: animationKey + 1,\r\n        playing: true,\r\n      }));\r\n    },\r\n    start: () => {\r\n      setAnimation(animation => ({\r\n        ...animation,\r\n        playing: true,\r\n      }));\r\n    },\r\n    stop: () => {\r\n      setAnimation(animation => ({\r\n        ...animation,\r\n        playing: false,\r\n      }));\r\n      barGroupRef.current.stop();\r\n      axisRef.current.stop();\r\n    },\r\n    playing,\r\n  }));\r\n  const prevPlayingRef = useRef(playing);\r\n  useEffect(() => {\r\n    if (prevPlayingRef.current !== playing) {\r\n      if (playing) {\r\n        onStart();\r\n      } else {\r\n        onStop();\r\n      }\r\n    }\r\n    prevPlayingRef.current = playing;\r\n  }, [playing]);\r\n  useLayoutEffect(() => {\r\n    if (barGroupRef.current) {\r\n      if (playing) {\r\n        barGroupRef.current.start();\r\n        axisRef.current.start();\r\n      }\r\n    }\r\n  });\r\n  const frame = keyframes[frameIdx];\r\n  const { date: currentDate, data: frameData } = frame;\r\n  const values = frameData.map(({ value }) => value);\r\n  const total = values.reduce((sum, d) => sum + d, 0)\r\n  const xMax = width - margin.left - margin.right;\r\n  const yMax = height - margin.top - margin.bottom;\r\n  // const domainMax = Math.max(...values);\r\n  const domainMax = 2 * 10 ** 4;\r\n  const xScale = scaleLinear({\r\n    domain: [0, domainMax],\r\n    range: [0, xMax]\r\n  });\r\n  const lengendScale = useMemo(() => scaleBand({\r\n    domain: categories.map((_, idx) => idx),\r\n    range: [width * 0.1, width * 0.9],\r\n  }), [width]);\r\n  const yScale = useMemo(\r\n    () =>\r\n      scaleBand({\r\n        domain: Array(numOfBars)\r\n          .fill(0)\r\n          .map((_, idx) => idx),\r\n        range: [0, yMax],\r\n        paddingInner: 0.2,\r\n      }),\r\n    [numOfBars, yMax]\r\n  );\r\n  const quarter = `Q${Math.floor(currentDate.getMonth() / 3) + 1}`;\r\n  // const legendBandwidth = lengendScale.bandwidth()\r\n  const fontSize = width / 40\r\n  const totalFormated = s(total)\r\n  return (\r\n    <svg width={width} height={height}>\r\n      <Group top={4} left={94}>\r\n        <path d=\"M486.88,28.87H450.06v29.4a3.55,3.55,0,0,0,3.54,3.54h33.28L474,45.34Z\" fill=\"#f7931e\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.12\"/>\r\n        <path d=\"M1.06,28.87H37.88v29.4a3.55,3.55,0,0,1-3.54,3.54H1.06L13.92,45.34Z\" fill=\"#f7931e\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.12\"/>\r\n        <rect x=\"30.06\" y=\"1.06\" width=\"428\" height=\"54.69\" rx=\"4.66\" stroke-width=\"2.12\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"#ffc027\"/>\r\n        <text transform=\"translate(49.34 37.42)\" font-size=\"28\" font-family=\"Noto Sans TC\" letter-spacing=\"0.08em\" fontWeight=\"bold\">100秒看完中文書十年暢銷榜</text>\r\n        <g>\r\n          <line x1=\"37.88\" y1=\"6.41\" x2=\"449.97\" y2=\"6.41\" fill=\"#ffc027\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\r\n          <line x1=\"37.88\" y1=\"50.41\" x2=\"449.97\" y2=\"50.41\" fill=\"#ffc027\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\r\n        </g>\r\n      </Group>\r\n      {/* <line x1=\"0\" y1=\"80\" x2={width} y2=\"80\" stroke=\"black\" strokeWidth=\"2\"></line> */}\r\n      <LegendOrdinal scale={colorScale}>\r\n        {labels => (\r\n          <Group top=\"90\" left=\"76\">\r\n            {labels.map((label, i) => {\r\n              const xPos = lengendScale(i)\r\n              return (\r\n                <Group key={i} left={xPos}>\r\n                  <rect fill={label.value} width={legendGlyphSize} height={legendGlyphSize} strokeWidth=\"1\" stroke=\"black\" />\r\n                  <text x={26} y={16} fontSize={fontSize} fontWeight=\"500\" fontFamily=\"Noto Sans TC\">{label.text}</text>\r\n                </Group>\r\n              )\r\n            })}\r\n          </Group>\r\n        )}\r\n      </LegendOrdinal>\r\n      <line x1=\"0\" y1=\"120\" x2={width} y2=\"120\" stroke=\"black\" strokeWidth=\"2\"></line>\r\n      <Group top={margin.top} left={margin.left} key={animationKey}>\r\n        <RacingBarGroup\r\n          frameData={frameData.slice(0, numOfBars)}\r\n          xScale={xScale}\r\n          yScale={yScale}\r\n          colorScale={colorScale}\r\n          duration={duration}\r\n          xMax={xMax}\r\n          ref={barGroupRef}\r\n        />\r\n        <text\r\n          textAnchor=\"end\"\r\n          fontSize=\"2em\"\r\n          x={xMax + margin.right}\r\n          y={yMax - 58}\r\n          fontWeight=\"700\"\r\n          fontFamily=\"Noto Sans TC\"\r\n          fill=\"#333333\"\r\n        >\r\n          {currentDate.getFullYear()}年\r\n          <tspan fontSize=\"1.5em\" fill=\"#ffc027\" stroke=\"black\" strokeWidth=\"2\"> {quarter}</tspan>\r\n        </text>\r\n        <line\r\n          x1={xMax + margin.right - 180}\r\n          y1={yMax - 42}\r\n          x2={xMax + margin.right}\r\n          y2={yMax - 42}\r\n          stroke=\"#b3b3b3\"\r\n          strokeWidth=\"3\"\r\n          strokeDasharray=\"16\"\r\n          strokeLinecap=\"round\"\r\n        ></line>\r\n        <Group left={xMax - 120} top={yMax - 30}>\r\n        <g>\r\n          <path d=\"M9.25,6.48,7.32,3.59,5.39.69a.64.64,0,0,0-1,0L2.44,3.59.52,6.48c-.23.34,0,.77.51.77H3.67V27.52a1.21,1.21,0,1,0,2.42,0V7.25H8.74A.52.52,0,0,0,9.25,6.48Z\" fill=\"#f2f2f2\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.87\"/>\r\n          <g>\r\n            <rect x=\"22.35\" y=\"2.35\" width=\"17.25\" height=\"21.28\" stroke-width=\"1.15\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"#fff\"/>\r\n            <rect x=\"18.9\" y=\"5.23\" width=\"17.25\" height=\"21.28\" stroke-width=\"0.86\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"#fbb03b\"/>\r\n            <polygon points=\"22.35 2.35 18.9 5.22 36.15 5.22 39.6 2.35 22.35 2.35\" fill=\"#f7931e\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.86\"/>\r\n            <polygon points=\"36.15 26.5 39.6 23.63 39.6 2.35 36.15 5.22 36.15 26.5\" fill=\"#f2f2f2\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.86\"/>\r\n            <line x1=\"37.88\" y1=\"5.97\" x2=\"37.88\" y2=\"23.05\" fill=\"#fff\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.58\"/>\r\n            <rect x=\"14.76\" y=\"8.56\" width=\"17.25\" height=\"21.28\" stroke-width=\"1.15\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"#fff\"/>\r\n            <rect x=\"11.31\" y=\"11.44\" width=\"17.25\" height=\"21.28\" stroke-width=\"0.86\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"#fbb03b\"/>\r\n            <polygon points=\"14.76 8.56 11.31 11.44 28.56 11.44 32.01 8.56 14.76 8.56\" fill=\"#f7931e\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.86\"/>\r\n            <polygon points=\"28.56 32.71 32.01 29.84 32.01 8.56 28.56 11.44 28.56 32.71\" fill=\"#f2f2f2\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.86\"/>\r\n            <line x1=\"30.29\" y1=\"12.18\" x2=\"30.29\" y2=\"29.26\" fill=\"#fff\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.58\"/>\r\n          </g>\r\n          <line x1=\"1.18\" y1=\"12.02\" x2=\"1.18\" y2=\"20.08\" fill=\"#f2f2f2\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.85\"/>\r\n          <line x1=\"8.31\" y1=\"22.18\" x2=\"8.31\" y2=\"27.84\" fill=\"#f2f2f2\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.87\"/>\r\n          <line x1=\"8.31\" y1=\"19.61\" x2=\"8.31\" y2=\"17.98\" fill=\"#f2f2f2\" stroke=\"#1a1a1a\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"0.87\"/>\r\n        </g>\r\n        </Group>\r\n        <text\r\n          textAnchor=\"start\"\r\n          fontSize=\"1.125em\"\r\n          x={xMax + margin.right - 130}\r\n          y={yMax}\r\n          fontWeight=\"700\"\r\n          fontFamily=\"Noto Sans TC\"\r\n          fill=\"#333333\"\r\n        >\r\n          <tspan dy=\"-1em\">銷售</tspan>\r\n          <tspan dy=\"1.125em\" dx=\"-2em\">總量</tspan>\r\n          <tspan dx=\"0.25em\" dy=\"-0.125em\" fontSize=\"2em\">\r\n            {totalFormated}\r\n          </tspan>\r\n        </text>\r\n       {/* <line\r\n          x1={0}\r\n          y1={0}\r\n          x2={0}\r\n          y2={yMax}\r\n          stroke=\"black\"\r\n        /> */}\r\n        <RacingAxisTop\r\n          domainMax={domainMax}\r\n          xMax={xMax}\r\n          yMax={yMax}\r\n          duration={duration}\r\n          ref={axisRef}\r\n        />\r\n      </Group>\r\n      <line x1={0} y1={height - margin.bottom + 30} x2={width} y2={height - margin.bottom + 30} stroke=\"black\" strokeWidth=\"2\"></line>\r\n      <rect x={0} y={height - margin.bottom + 30} width={width} height={margin.bottom - 30} fill=\"#CCCCCC\"></rect>\r\n      <text fontSize=\"16px\" x={width / 2} y={height - 16} textAnchor=\"middle\" fontFamily=\"Noto Sans TC\" fontWeight=\"bold\">博客來 x Re-lab 共同製作</text>\r\n    </svg>\r\n  );\r\n});\r\n\r\nRacingBarChart.defaultProps = {\r\n  width: 600,\r\n  height: 450,\r\n  margin: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 100\r\n  },\r\n};\r\n\r\nexport default RacingBarChart;\r\n","import React from \"react\";\r\nimport { tsv } from 'd3-fetch';\r\nimport { range } from \"lodash\";\r\n\r\nconst buildFindData = data => {\r\n  const dataByDateAndName = new Map();\r\n  data.forEach(dataPoint => {\r\n    const { date, name } = dataPoint;\r\n    if (!dataByDateAndName.get(date)) {\r\n      dataByDateAndName.set(date, { [name]: dataPoint });\r\n    } else {\r\n      const nextGroup = {\r\n        ...dataByDateAndName.get(date),\r\n        [name]: dataPoint\r\n      };\r\n      dataByDateAndName.set(date, nextGroup);\r\n    }\r\n  });\r\n  const finder = ({ date, name }) => {\r\n    try {\r\n      return dataByDateAndName.get(date)[name];\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n  return finder;\r\n}\r\n\r\nconst makeKeyframes = (data, numOfSlice) => {\r\n  /**\r\n   * Assume data is an array of { date: string, name: string, value: number, ...others }.\r\n   * This function return an array of keyframe, each keyframe is { date: Date, data: { name: string, value: number, ...others }[] }.\r\n   * At first we will collect all of the name appearing in the original data.\r\n   * The `data` field of keyframe is descending sorted by `value` field.\r\n   */\r\n  const findData = buildFindData(data);\r\n  const nameSet = new Set(data.map(({ name }) => name));\r\n  const nameList = [...nameSet];\r\n  const dateSet = new Set(data.map(({ date }) => date));\r\n  const dateList = [...dateSet];\r\n\r\n  const frames = dateList.sort().map(date => ({\r\n    date,\r\n    data: nameList.map(name => {\r\n      const dataPoint = findData({ date, name });\r\n      return {\r\n        ...dataPoint,\r\n        value: dataPoint ? dataPoint.value : 0,\r\n      };\r\n    })\r\n  }));\r\n  const keyframes = frames\r\n    .reduce((result, frame, idx) => {\r\n      const prev = frame;\r\n      const next = idx !== frames.length - 1 ? frames[idx + 1] : null;\r\n      if (!next) {\r\n        result.push({ ...frame, date: new Date(frame.date) });\r\n      } else {\r\n        const prevTimestamp = new Date(prev.date).getTime();\r\n        const nextTimestamp = new Date(next.date).getTime();\r\n        const diff = nextTimestamp - prevTimestamp;\r\n        for (let i = 0; i < numOfSlice; i++) {\r\n          const sliceDate = new Date(prevTimestamp + diff * i / numOfSlice);\r\n          const sliceData = frame.data.map(({ name, value, ...others }) => {\r\n            const prevValue = value;\r\n            const nextDataPoint = findData({ date: next.date, name });\r\n            const nextValue = nextDataPoint ? nextDataPoint.value : 0;\r\n            const sliceValue =\r\n              prevValue + (nextValue - prevValue) * i / numOfSlice;\r\n            return {\r\n              name,\r\n              value: sliceValue,\r\n              ...others\r\n            };\r\n          });\r\n          result.push({\r\n            date: sliceDate,\r\n            data: sliceData\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    }, [])\r\n    .map(({ date, data }) => {\r\n      return {\r\n        date,\r\n        data: data.sort((a, b) => b.value - a.value)\r\n      };\r\n    });\r\n  return keyframes;\r\n};\r\n\r\nfunction useKeyframes(dataUrl, numOfSlice) {\r\n  const [keyframes, setKeyframes] = React.useState([]);\r\n  React.useEffect(() => {\r\n    // csv(dataUrl).then(data => {\r\n    //   const keyframes = makeKeyframes(data.map(d => ({ ...d, value: Number(d.value) })), numOfSlice);\r\n    //   setKeyframes(keyframes);\r\n    // });\r\n    tsv(dataUrl).then((data) => {\r\n      const transformed = range(2010, 2021).reduce((all, y) => {\r\n        range(4).forEach(q => {\r\n          const qPath = `${y}/Q${q + 1}`\r\n          const hasQData = data.filter(d => d[qPath]).map(d => ({\r\n            date: [y, String(q * 3 + 1).padStart(2, '0'), '01'].join('-'),\r\n            id: d['序'],\r\n            name: d['書名'],\r\n            author: d['作者'],\r\n            category: d['分類'],\r\n            value: Number(d[qPath] || 0),\r\n          }))\r\n          Array.prototype.push.apply(all, hasQData)\r\n        })\r\n        return all\r\n      }, [])\r\n      const keyframes = makeKeyframes(transformed, numOfSlice);\r\n      setKeyframes(keyframes);\r\n    })\r\n  }, [dataUrl, numOfSlice]);\r\n  return keyframes;\r\n}\r\n\r\nexport default useKeyframes;","export default __webpack_public_path__ + \"static/media/data.4f46ef4e.tsv\";","import React, { useState } from \"react\";\r\nimport RacingBarChart from \"./RacingBarChart\";\r\nimport useKeyframes from \"./useKeyframes\";\r\nimport useWindowSize from \"./useWindowSize\";\r\n\r\nimport tsvData from './data.tsv'\r\n\r\nconst numOfBars = 10;\r\nconst numOfSlice = 10;\r\nconst chartMargin = {\r\n  top: 180,\r\n  right: 60,\r\n  bottom: 76,\r\n  left: 120,\r\n};\r\nconst ratio = 667 / 640\r\n\r\nfunction App() {\r\n  const [duration, setDuration] = useState(250)\r\n  const { width: windowWidth } = useWindowSize();\r\n  const chartWidth = Math.min(720, windowWidth) - 64;\r\n  const keyframes = useKeyframes(tsvData, numOfSlice);\r\n  const chartRef = React.useRef();\r\n  const handleReplay = () => {\r\n    chartRef.current.replay();\r\n  }\r\n  const handleStart = () => {\r\n    chartRef.current.start();\r\n  }\r\n  const handleStop = () => {\r\n    chartRef.current.stop();\r\n  }\r\n  const playing = chartRef.current ? chartRef.current.playing : false;\r\n  const [_, forceUpdate] = useState();\r\n  return (\r\n    <div style={{ margin: \"0 auto\", maxWidth: 720 }}>\r\n      <div style={{ paddingTop: \"1em\"}}>\r\n        <button onClick={handleReplay}>replay</button>\r\n        <button onClick={playing ? handleStop : handleStart}>\r\n          { playing ? 'stop' : 'start' }\r\n        </button>\r\n        <input type=\"number\" step=\"50\" min=\"100\" max=\"1000\" onChange={e => setDuration(e.target.value * 1)} value={duration} />\r\n        <div style={{ height: '2em' }}></div>\r\n        {keyframes.length > 0 && (\r\n          <RacingBarChart\r\n            keyframes={keyframes}\r\n            numOfBars={numOfBars}\r\n            width={chartWidth}\r\n            height={chartWidth * ratio}\r\n            margin={chartMargin}\r\n            onStart={() => forceUpdate(true)}\r\n            onStop={() => forceUpdate(false)}\r\n            ref={chartRef}\r\n            duration={duration}\r\n            ratio={ratio}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nexport default function useWindowSize() {\r\n  const getSize = () => ({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n  const [windowSize, setWindowSize] = React.useState(getSize);\r\n  React.useEffect(() => {\r\n    const onResize = () => {\r\n      setWindowSize(getSize);\r\n    };\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n  return windowSize\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}